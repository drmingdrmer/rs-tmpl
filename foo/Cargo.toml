[package]
name = "foo"
readme = "../README.md"

version       = { workspace = true }
edition       = { workspace = true }
authors       = { workspace = true }
categories    = { workspace = true }
description   = { workspace = true }
documentation = { workspace = true }
homepage      = { workspace = true }
keywords      = { workspace = true }
license       = { workspace = true }
repository    = { workspace = true }

[dependencies]
anyerror        = { workspace = true }
async-trait     = { workspace = true }
byte-unit       = { workspace = true }
bytes           = { workspace = true }
derive_more     = { workspace = true }
futures         = { workspace = true }
maplit          = { workspace = true }
rand            = { workspace = true }
serde           = { workspace = true, optional = true }
clap            = { workspace = true }
thiserror       = { workspace = true }
tokio           = { workspace = true }
tracing         = { workspace = true }
tracing-futures = { workspace = true }

[dev-dependencies]
anyhow             = { workspace = true }
async-entry        = { workspace = true }
lazy_static        = { workspace = true }
pretty_assertions  = { workspace = true }
tracing-appender   = { workspace = true }
tracing-subscriber = { workspace = true }


[features]
docinclude = [] # Used only for activating `doc(include="...")` on nightly.

# Enables benchmarks in unittest.
#
# Benchmark in openraft depends on the unstable feature `test` thus it can not be used with stable rust.
# In order to run the benchmark with stable toolchain,
# the unstable features have to be enabled explicitly with environment variable `RUSTC_BOOTSTRAP=1`.
bench = []

# Enable backtrace when generating an error.
# Stable rust does not support backtrace.
bt  = ["anyerror/backtrace", "anyhow/backtrace"]

# Add serde::Serialize and serde:Deserialize bound to data types.
# If you'd like to use `serde` to serialize messages.
serde = ["dep:serde"]

[package.metadata.docs.rs]
features = ["docinclude"] # Activate `docinclude` during docs.rs build.
